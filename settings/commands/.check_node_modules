#!/usr/bin/env bash

# main inputs
name_of_check="node modules"
file_to_watch="package.json"
file_to_watch="package.json"
hash_check_name="node_modules"
function link_package_lock {
    file1="./package-lock.json"
    file2="./settings/requirements/package-lock.json"
    # link the package lock if it exists
    if [[ -f "$file1" ]]   
    then
        if ! [[ -f "$file2" ]]
        then
            ln "$file1" "$file2"
        fi
    fi
}
function link_package {
    file1="./package.json"
    file2="./settings/requirements/package.json"
    # link the package if it exists
    if [[ -f "$file1" ]]   
    then
        if ! [[ -f "$file2" ]]
        then
            ln "$file1" "$file2"
        fi
    fi
}
function failed_check_command {
    # what to do when node modules haven't been installed yet
    npm install
    link_package_lock
    link_package
}
function generate_file_command {
    # what to do when package.json file doesn't exist
    # check if file exists
    if [[ -f "./settings/requirements/package.json" ]]
    then
        ln "./settings/requirements/package.json" "$file_to_watch"
    else
        npm init -y
        ln "$file_to_watch" "./settings/requirements/package.json"
    fi
    link_package_lock
}

echo "Running $name_of_check check"

# ensure that the source file and hash file exist
if ! [[ -f "./$file_to_watch" ]]; then
    generate_file_command
fi
location_of_hash="./settings/.cache/.$hash_check_name.cleanable.hash"
if ! [[ -f "$location_of_hash" ]]; then
    # make sure the folder exists
    mkdir -p "$(dirname "$location_of_hash")"
    touch $location_of_hash
fi

# check if need to do install using that hash
old_hash="$(cat $location_of_hash)"
new_hash="$(cat $file_to_watch | md5sum)"
if [[ "$old_hash" != "$new_hash" ]]; then
    echo "$new_hash" > $location_of_hash
    failed_check_command
else
    echo "I see a cached $name_of_check check => assuming packages are installed"
fi

# CUSTOM check, if node_modules doesn't exist
if ! [[ -d "node_modules" ]]; then
    echo "$new_hash" > $location_of_hash
    failed_check_command
fi